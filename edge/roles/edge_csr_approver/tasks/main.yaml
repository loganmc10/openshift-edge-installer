- name: Create CSR Approver ServiceAccount
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: ztpfw-csr-approver
        namespace: openshift-infra
    apply: true
    state: present
  register: k8s_result
  until: k8s_result is not failed

- name: Create CSR Approver ClusterRole
  kubernetes.core.k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: ztpfw-csr-approver
      rules:
        - apiGroups:
            - certificates.k8s.io
          resources:
            - certificatesigningrequests
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - certificates.k8s.io
          resources:
            - certificatesigningrequests/approval
          verbs:
            - update
        - apiGroups:
            - certificates.k8s.io
          resources:
            - signers
          verbs:
            - approve
    apply: true
    state: present
  register: k8s_result
  until: k8s_result is not failed

- name: Create CSR Approver ClusterRoleBinding
  kubernetes.core.k8s:
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: ztpfw-csr-approver
      subjects:
        - kind: ServiceAccount
          name: ztpfw-csr-approver
          namespace: openshift-infra
      roleRef:
        kind: ClusterRole
        name: ztpfw-csr-approver
        apiGroup: rbac.authorization.k8s.io
    apply: true
    state: present
  register: k8s_result
  until: k8s_result is not failed

- name: Create CSR Approver Secret
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: ztpfw-csr-approver-secret
        namespace: openshift-infra
        annotations:
          kubernetes.io/service-account.name: ztpfw-csr-approver
      type: kubernetes.io/service-account-token
    apply: true
    state: present
  register: k8s_result
  until: k8s_result is not failed

- name: Wait for CSR Approver token to be deployed
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: ztpfw-csr-approver-secret
    namespace: openshift-infra
  register: csr_secret
  until: csr_secret.resources[0].data.token is defined
  retries: 60
  delay: 10

# this MachineConfig has to be deployed here, rather than install phase
# this is because it includes the kubeconfig for the ServiceAccount, which can't be generated until after the install is complete
- name: Apply CSR Approver MachineConfig
  kubernetes.core.k8s:
    template: MachineConfig.yaml.j2
    apply: true
    state: present
  register: csr_mc
  until: csr_mc is not failed

- name: Wait for MCP to begin progressing # noqa no-handler
  when: csr_mc.changed
  kubernetes.core.k8s_info:
    api_version: machineconfiguration.openshift.io/v1
    kind: MachineConfigPool
    name: master
    wait: true
    wait_condition:
      type: Updating
      status: "True"
    wait_timeout: 600
  register: k8s_result
  until: k8s_result is not failed

- name: Wait for MCP to finish progressing # noqa no-handler
  when: csr_mc.changed
  kubernetes.core.k8s_info:
    api_version: machineconfiguration.openshift.io/v1
    kind: MachineConfigPool
    name: master
    wait: true
    wait_condition:
      type: Updating
      status: "False"
    wait_timeout: 300
  register: k8s_result
  until: k8s_result is not failed
  retries: 60
  delay: 30
