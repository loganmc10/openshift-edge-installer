- name: Post install tasks
  block:
    - name: Get kubeconfig
      # grab the kubeconfig early in order to assist in troubleshooting
      ansible.builtin.include_tasks: kubeconfig.yaml

    - name: Wait for install to complete
      kubernetes.core.k8s_info:
        api_version: extensions.hive.openshift.io/v1beta1
        kind: AgentClusterInstall
        name: "{{ metadata.name }}"
        namespace: "{{ metadata.name }}"
        wait: true
        wait_condition:
          type: Completed
          status: "True"
        wait_sleep: 60
        wait_timeout: 14400

    - name: Update kubeconfig
      # during the install, the kubeconfig is modified to included additional CAs, here we update the kubeconfig to include those
      ansible.builtin.include_tasks: kubeconfig.yaml

    - name: Set required environment vars
      ansible.builtin.set_fact:
        kubeconfig_env_vars:
          KUBECONFIG: "{{ kubeconfig_file.dest }}"

    # in a multi-node relocatable cluster, the API needs to be exposed using MetalLB
    # before MetalLB is installed, we access the cluster by connecting directly to a control plane node
    - name: Set up access to relocatable cluster
      when: (controlPlane.replicas == 3) and (edgeCluster.relocatable is defined)
      block:
        - name: Set fact for multinode relocatable cluster
          ansible.builtin.set_fact:
            access_control_node: true

        - name: Get BareMetalHosts
          kubernetes.core.k8s_info:
            api_version: metal3.io/v1alpha1
            kind: BareMetalHost
            namespace: "{{ metadata.name }}"
          register: bmh_list
          until: bmh_list is not failed

        - name: Find control plane node
          loop: "{{ bmh_list.resources }}"
          loop_control:
            label: "{{ item.metadata.name }}"
          when: item.metadata.annotations['bmac.agent-install.openshift.io/role'] == "master"
          ansible.builtin.set_fact:
            control_plane_node: "{{ item }}"

        - name: Find IPv4 for first control plane node
          loop: "{{ control_plane_node.status.hardware.nics }}"
          loop_control:
            label: "{{ item.ip | default(item.name) }}"
          when: >
            (item.ip is defined) and
            (item.ip | ansible.utils.ipv4) and
            (not (relocatable_ipv4_subnet | ansible.utils.network_in_usable(item.ip)))
          ansible.builtin.set_fact:
            node_ip: "{{ item.ip }}"

        - name: Find IPv6 for first control plane node
          loop: "{{ control_plane_node.status.hardware.nics }}"
          loop_control:
            label: "{{ item.ip | default(item.name) }}"
          when: >
            (node_ip is not defined) and
            (item.ip is defined) and
            (item.ip | ansible.utils.ipv6) and
            (not (relocatable_ipv6_subnet | ansible.utils.network_in_usable(item.ip)))
          ansible.builtin.set_fact:
            node_ip: "{{ item.ip }}"

        - name: Add required environment vars
          ansible.builtin.set_fact:
            kubeconfig_env_vars: "{{ kubeconfig_env_vars | combine({'K8S_AUTH_HOST': 'https://' + node_ip + ':6443', 'K8S_AUTH_VERIFY_SSL': 'false'}) }}"

    - name: Run tasks on edge cluster
      environment: "{{ kubeconfig_env_vars }}"
      block:
        # applied during post-install because it doesn't seem to work as an install-time manifest
        # routingViaHost is required for relocatable clusters
        - name: Configure routingViaHost
          when: (edgeCluster.routingViaHost is defined and edgeCluster.routingViaHost) or (edgeCluster.relocatable is defined)
          ansible.builtin.include_tasks: routing_via_host.yaml

        - name: Apply post-install manifests
          ansible.builtin.include_tasks: post_manifests.yaml

        - name: Setup MetalLB for relocatable cluster
          when: access_control_node
          ansible.builtin.include_tasks: metallb.yaml
          vars:
            api_lb: true
            ingress_lb: true

        - name: Install Storage # noqa role-name[path]
          when: (edgeCluster.odfStorage is defined) and (edgeCluster.odfStorage.enabled)
          ansible.builtin.include_role:
            name: "{{ playbook_dir }}/../common/roles/storage"
          vars:
            catalog_source: "{{ edgeCluster.odfStorage.catalogSource | default('redhat-operators') }}"

        - name: Auto approve CSRs
          when: (edgeCluster.autoApproveCSRs is defined) and (edgeCluster.autoApproveCSRs)
          ansible.builtin.include_role:
            name: "edge_csr_approver"
  always:
    - name: Remove Edge Cluster Namespace
      when: ((edgeCluster.keepNamespace is defined) and (not edgeCluster.keepNamespace)) or (edgeCluster.keepNamespace is not defined)
      block:
        - name: Delete BareMetalHosts
          loop: "{{ platform.baremetal.hosts }}"
          loop_control:
            label: "{{ item.name }}"
          kubernetes.core.k8s:
            definition:
              apiVersion: metal3.io/v1alpha1
              kind: BareMetalHost
              metadata:
                name: "{{ item.name }}"
                namespace: "{{ metadata.name }}"
            state: absent
            wait: true
            wait_timeout: 1200

        - name: Delete Namespace
          kubernetes.core.k8s:
            definition:
              apiVersion: v1
              kind: Namespace
              metadata:
                name: "{{ metadata.name }}"
            state: absent
            wait: true
            wait_timeout: 1200
