- name: Get kubeconfig ref
  kubernetes.core.k8s_info:
    api_version: extensions.hive.openshift.io/v1beta1
    kind: AgentClusterInstall
    name: "{{ metadata.name }}"
    namespace: "{{ metadata.name }}"
  register: aci
  until: aci.resources[0]["spec"]["clusterMetadata"]["adminKubeconfigSecretRef"]["name"] is defined
  retries: 30
  delay: 60

- name: Get kubeconfig
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ aci.resources[0]['spec']['clusterMetadata']['adminKubeconfigSecretRef']['name'] }}"
    namespace: "{{ metadata.name }}"
  register: kubeconfig

- name: Copy kubeconfig to file
  ansible.builtin.copy:
    content: "{{ kubeconfig.resources[0].data.kubeconfig | b64decode }}"
    dest: "{{ aci.resources[0]['spec']['clusterMetadata']['adminKubeconfigSecretRef']['name'] }}"
    mode: "0600"
  register: kubeconfig_file

- name: Wait for install to complete
  kubernetes.core.k8s_info:
    api_version: extensions.hive.openshift.io/v1beta1
    kind: AgentClusterInstall
    name: "{{ metadata.name }}"
    namespace: "{{ metadata.name }}"
    wait: true
    wait_condition:
      type: Completed
      status: "True"
    wait_sleep: 60
    wait_timeout: 14400

- name: Run tasks on spoke cluster
  environment:
    K8S_AUTH_KUBECONFIG: "{{ kubeconfig_file.dest }}"
  block:
    - name: DisableSnoNetworkDiag
      when: (controlPlane.replicas == 1)
      kubernetes.core.k8s:
        definition:
          apiVersion: operator.openshift.io/v1
          kind: Network
          metadata:
            name: cluster
          spec:
            disableNetworkDiagnostics: true
        state: present

    - name: ConsoleOperatorDisable
      when: (disableConsole is defined) and (disableConsole)
      kubernetes.core.k8s:
        definition:
          apiVersion: operator.openshift.io/v1
          kind: Console
          metadata:
            name: cluster
          spec:
            managementState: Removed
        state: present

    - name: Apply post-install manifests
      when: postInstallManifestsFolder is defined
      loop: "{{ lookup('ansible.builtin.fileglob', lookup('ansible.builtin.vars', 'postInstallManifestsFolder') + '/*', wantlist=True) | sort }}"
      loop_control:
        pause: 30
      kubernetes.core.k8s:
        src: "{{ item }}"
        wait: true
        state: present

    - name: Install ODF
      when: (odfStorage is defined) and (odfStorage)
      ansible.builtin.include_role:
        name: "{{ playbook_dir }}/../hub/roles/hub_storage"
