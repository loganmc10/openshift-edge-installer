- name: Get ClusterVersion
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: ClusterVersion
    name: version
  register: cluster_version
  until: cluster_version is not failed

# before 4.12, the LVMS operator was known as ODF-LVM
- name: Use ODF-LVM Storage Class
  when: cluster_version.resources[0].status.desired.version is ansible.builtin.version("4.12.0", "lt")
  ansible.builtin.set_fact:
    lvms_storage_class: odf-lvm-vg1

- name: Use ODF-LVM Operator
  when: cluster_version.resources[0].status.desired.version is ansible.builtin.version("4.12.0", "lt")
  ansible.builtin.set_fact:
    lvms_operator_name: odf-lvm-operator

- name: Gather storage class info
  kubernetes.core.k8s_info:
    api_version: storage.k8s.io/v1
    kind: StorageClass
  register: storage_classes
  until: storage_classes is not failed

- name: Check for default storage class
  ansible.builtin.set_fact:
    has_default_storage: "{{ item.metadata.name }}"
  loop: "{{ storage_classes.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"
  when: >
    (("annotations" in item["metadata"]) and
    ("storageclass.kubernetes.io/is-default-class" in item["metadata"]["annotations"]) and
    (item["metadata"]["annotations"]["storageclass.kubernetes.io/is-default-class"] == "true"))

- name: Check for suitable default storage
  loop: "{{ storage_classes.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"
  ansible.builtin.include_tasks: set_storage.yaml

- name: Install storage provider
  when: has_default_storage is not defined
  block:
    - name: Install LSO operator # noqa role-name[path]
      ansible.builtin.include_role:
        name: "{{ playbook_dir }}/../common/roles/install_operator"
      vars:
        operator_name: local-storage-operator
        operator_namespace: openshift-local-storage
        all_namespaces: false

    - name: Get node list
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Node
        label_selectors:
          - "node-role.kubernetes.io/worker"
      register: worker_nodes
      until: worker_nodes is not failed

    - name: Label worker nodes
      loop: "{{ worker_nodes.resources }}"
      loop_control:
        label: "{{ item.metadata.name }}"
      kubernetes.core.k8s:
        definition:
          api_version: v1
          kind: Node
          metadata:
            name: "{{ item.metadata.name }}"
            labels:
              cluster.ocs.openshift.io/openshift-storage: ""
        state: present
      register: k8s_result
      until: k8s_result is not failed

    - name: Clean volumes
      ansible.builtin.include_tasks:
        file: clean_volumes.yaml

    - name: Install ODF
      when: worker_nodes.resources | length | int > 2
      ansible.builtin.include_tasks:
        file: storage_odf.yaml

    - name: Install LVMS
      when: worker_nodes.resources | length | int < 3
      ansible.builtin.include_tasks:
        file: storage_lvm.yaml
  rescue: # CRs need to be removed before the namespaces holding the operators are removed, or else the CR finalizers will get stuck
    - name: Remove LocalVolumeDiscovery
      kubernetes.core.k8s:
        definition:
          apiVersion: local.storage.openshift.io/v1alpha1
          kind: LocalVolumeDiscovery
          metadata:
            name: auto-discover-devices
            namespace: openshift-local-storage
        state: absent
        wait: true
        wait_timeout: 1200
      ignore_errors: true # noqa ignore-errors

    - name: Remove StorageCluster
      kubernetes.core.k8s:
        definition:
          apiVersion: ocs.openshift.io/v1
          kind: StorageCluster
          metadata:
            name: ocs-storagecluster
            namespace: openshift-storage
        state: absent
        wait: true
        wait_timeout: 1200
      ignore_errors: true # noqa ignore-errors

    - name: Remove LVMCluster
      kubernetes.core.k8s:
        definition:
          apiVersion: lvm.topolvm.io/v1alpha1
          kind: LVMCluster
          metadata:
            name: lvmcluster
            namespace: openshift-storage
        state: absent
        wait: true
        wait_timeout: 1200
      ignore_errors: true # noqa ignore-errors

    - name: Remove LocalVolumeSet
      kubernetes.core.k8s:
        definition:
          apiVersion: local.storage.openshift.io/v1alpha1
          kind: LocalVolumeSet
          metadata:
            name: local-storage
            namespace: openshift-local-storage
        state: absent
        wait: true
        wait_timeout: 1200
      ignore_errors: true # noqa ignore-errors

    - name: Remove ODF namespace
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: openshift-storage
        state: absent
        wait: true
        wait_timeout: 1200

    - name: Remove LSO namespace
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: openshift-local-storage
        state: absent
        wait: true
        wait_timeout: 1200

    - name: Remove StorageClasses
      loop:
        - "{{ lvms_storage_class }}"
        - "ocs-storagecluster-ceph-rgw"
        - "ocs-storagecluster-cephfs"
        - "local-storage"
      loop_control:
        label: "{{ item }}"
      kubernetes.core.k8s:
        definition:
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: "{{ item }}"
        state: absent
        wait: true
        wait_timeout: 1200

    - name: End playbook
      ansible.builtin.meta: end_play
